QUESTION = https://www.hackerrank.com/contests/university-codesprint-5/challenges/array-triplets/problem
int n;
ll sum[1 << N];
int a[N];

int main(){ _
	cin >> n;
	
	assert(3 <= n and n <= N);
	
	for(int i = 0; i < n; i++){
		cin >> a[i];
		
		assert(-1000000000 <= a[i] and a[i] <= 1000000000);
	}
	
	for(int i = 1; i < (1 << n); i++){
		int lo = 0;
		while(!(i & (1 << lo))) lo++;

		sum[i] = sum[i & (i-1)] + a[lo];//it directly sums no iteration to count 1 and add that value
	}
	
	ll ans = 0;
	int U = (1 << n) - 1;
	
	for(int p = 1; p < (1<<n); p++){
		int qr = U ^ p;
		
		int q = qr & (qr-1);
		int r;
		
		while(q > 0){
			r = qr ^ q; // q ^ r = q^(q^qr) = qr
			if(sum[p] == sum[q] and sum[q] == sum[r]) ans++;
			q = qr & (q-1);// this is the most sexy thing ever i mean really it really creates all possible value of 1s appear in qr as it is & so only that thing of qr will be there  
		}
	}
	
	cout << ans << endl;
	
	return 0;
}
